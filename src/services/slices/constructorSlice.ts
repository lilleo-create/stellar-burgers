import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { TConstructorIngredient, TOrder } from '../../utils/types';

// üîπ –¢–∏–ø —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
interface ConstructorState {
  bun: TConstructorIngredient | null;
  ingredients: TConstructorIngredient[];
  orderRequest: boolean;
  orderModalData: TOrder | null;
}

// üîπ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const initialState: ConstructorState = {
  bun: null,
  ingredients: [],
  orderRequest: false,
  orderModalData: null
};

// üîπ –°—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è (slice)
const constructorSlice = createSlice({
  name: 'constructor',
  initialState,
  reducers: {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—É–ª–∫—É
    setBun(state, action: PayloadAction<TConstructorIngredient>) {
      state.bun = action.payload;
    },

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç
    addIngredient(state, action: PayloadAction<TConstructorIngredient>) {
      state.ingredients.push(action.payload);
    },

    // –£–¥–∞–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –ø–æ id
    removeIngredient(state, action: PayloadAction<string>) {
      state.ingredients = state.ingredients.filter(
        (item) => item._id !== action.payload
      );
    },

    // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    clearConstructor(state) {
      state.bun = null;
      state.ingredients = [];
      state.orderRequest = false;
      state.orderModalData = null;
    },

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞
    setOrderRequest(state, action: PayloadAction<boolean>) {
      state.orderRequest = action.payload;
    },

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è –º–æ–¥–∞–ª–∫–∏
    setOrderModalData(state, action: PayloadAction<TOrder | null>) {
      state.orderModalData = action.payload;
    }
  }
});

// üîπ –≠–∫—Å–ø–æ—Ä—Ç —ç–∫—à–µ–Ω–æ–≤
export const {
  setBun,
  addIngredient,
  removeIngredient,
  clearConstructor,
  setOrderRequest,
  setOrderModalData
} = constructorSlice.actions;

// üîπ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–¥—å—é—Å–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default constructorSlice.reducer;
